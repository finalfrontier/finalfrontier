@include "base.fgd"

@PointClass base(Targetname, Origin) = info_ff_universe : "universe"
[
	width(integer) : "Universe Width" : 1024 : "Width of the observable universe (inches)"
	height(integer) : "Universe height" : 1024 : "Height of the observable universe (inches)"
	horzSectors(integer) : "Horizontal sectors" : 8 : "Number of sectors along the X axis"
	vertSectors(integer) : "Vertical sectors" : 8 : "Number of sectors along the Y axis"
]

@PointClass base(Targetname, Origin) = info_ff_ship : "ship"
[
	health(integer) : "Base hull health" : 1 : "The initial hull health of the ship"
    mainlight(target_destination) : "Main light" : "" : "Targetname of the main lights"
    warnlight(target_destination) : "Warning light" : "" : "Targetname of the warning lights"
    warnlightbrush(target_destination) : "Warning light brush" : "" : "Targetname of a bush to toggle a material on when warning lights are enabled"
]

@PointClass base(Targetname, Origin) = info_ff_room : "room"
[
	ship(target_destination) : "Parent ship" : "" : "Targetname of the ship containing this room"
	system(choices) : "System" : "" =
	[
		"" : "None (default)"
		"piloting" : "Piloting"
		"sensors" : "Sensors"
		"weapons" : "Weapons"
		"reactor" : "Reactor"
		"lifesupport" : "Life support"
		"doorcontrol" : "Door control"
		"shields" : "Shield control"
		"medical" : "Medical bay"
		"transporter" : "Transporter"
		"engineering" : "Engineering"
	]
	volume(float) : "Room volume" : "1000" : "Approximate volume of the room in metres cubed"
]

@PointClass base(Targetname, Origin, Angles) = info_ff_door : "door"
[
	door(target_destination) : "Door Parts" : "" : "Targetname of the door object to open and close"
	room1(target_destination) : "Room" : "" : "Targetname of a room this door is connected to"
	room2(target_destination) : "Room" : "" : "Targetname of a room this door is connected to"

	input Opened(void) : "Door object finished opening"
	input Closed(void) : "Door object finished closing"
]

@PointClass base(Targetname, Origin, Angles) = info_ff_screen : "screen"
[
	room(target_destination) : "Parent room" : "" : "Targetname of the room containing this screen"
	width(float) : "Display width" : "48" : "Width of the display in inches"
	height(float) : "Display height" : "28" : "Height of the display in inches"
]

@PointClass base(Origin) = info_ff_roomcorner : "room corner"
[
	room(target_destination) : "Parent room" : "" : "Targetname of the room containing this corner"
	index(integer) : "Index" : 1 : "Index of this corner, starting at 1"
]

@PointClass base(Targetname, Origin) = info_ff_roomdetail : "room detail"
[
	room(target_destination) : "Parent room" : "" : "Targetname of the room containing this detail"
	next1(target_destination) : "Next detail" : "" : "Targetname of a detail connected to this one"
	next2(target_destination) : "Next detail" : "" : "Targetname of a detail connected to this one"
	next3(target_destination) : "Next detail" : "" : "Targetname of a detail connected to this one"
	next4(target_destination) : "Next detail" : "" : "Targetname of a detail connected to this one"
	next5(target_destination) : "Next detail" : "" : "Targetname of a detail connected to this one"
	next6(target_destination) : "Next detail" : "" : "Targetname of a detail connected to this one"
	next7(target_destination) : "Next detail" : "" : "Targetname of a detail connected to this one"
	next8(target_destination) : "Next detail" : "" : "Targetname of a detail connected to this one"
]

@PointClass base(Origin) = info_ff_transtarget : "transporter target"
[
	room(target_destination) : "Parent room" : "" : "Targetname of the room containing this transporter target"
	transpad(choices) : "Transporter Pad" : "0" =
	[
		0 : "Nope"
		1 : "Yessir"
	]
]

@PointClass base(Targetname, Angles) studio("models/props_c17/consolebox01a.mdl") = info_ff_moduleslot : "module slot"
[
	room(target_destination) : "Parent room" : "" : "Targetname of the room containing this module slot"
	hatch(target_destination) : "Hatch" : "" : "Targetname of the hatch covering the slot"
	type(choices) : "Module Type" : "0" =
	[
		0 : "Life Support"
		1 : "Shields"
		2 : "System Power"
        3 : "Repair 1"
        4 : "Repair 2"
        5 : "Weapon 1"
        6 : "Weapon 2"
        7 : "Weapon 3"
	]
]

@PointClass base(Angles) = info_ff_damageeffect : "damage effect"
[
	room(target_destination) : "Parent room" : "" : "Targetname of the room containing this damage effect"
	type(choices) : "Effect Type" : "0" =
	[
		0 : "None"
		1 : "Sparks"
		2 : "Gas"
		4 : "Smoke"
		8 : "Cracks"
	]
]
